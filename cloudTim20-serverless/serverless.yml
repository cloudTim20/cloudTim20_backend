service: cloudTim20-serverless-beck

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    zip: true

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  stage: dev
  region: eu-central-1
  memorySize: 128
  timeout: 10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:eu-central-1:881974833390:table/*"
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        - "arn:aws:s3:::*"
        - "arn:aws:s3:::*/*"
    - Effect: Allow
      Action:
        - cognito-idp:*
      Resource: "*"


package:
  individually: True
  patterns:
    - '!**/**'
    - 'utility/**'
    - 'requirements.txt'
    - 'unzip_requirements.py'
    - '.requirements.zip'

functions:
  register:
    handler: register/register.register

    package:
      include:
        - 'register/**'

    events:
      - http:
          path: register
          method: post
          cors: true

  login:
    handler: login/login.login

    package:
      include:
        - 'login/**'
    events:
      - http:
          path: login
          method: post
          cors: true


#
#  upload_data:
#    handler: uploadData/upload_data.upload_data
#
#    package:
#      include: 'uploadData/**'
#
#    url:
#      cors:
#        allowedOrigins:
#          - '*'
#        allowedHeaders:
#          - Authorization
#        allowedMethods:
#          - POST
#
#  get_data:
#    handler: getData.get_data.get_data
#
#    package:
#      include: 'getData/**'
#
#    url:
#      cors:
#        allowedOrigins:
#          - '*'
#        allowedHeaders:
#          - Authorization
#        allowedMethods:
#          - GET
#
#  modify_data:
#    handler: modifyData.modify_data.modify_data
#
#    package:
#      include: 'modifyData/**'
#
#    url:
#      cors:
#        allowedOrigins:
#          - '*'
#        allowedHeaders:
#          - Authorization
#        allowedMethods:
#          - PUT
#
#  delete_data:
#    handler: deleteData.delete_data.delete_data
#
#    package:
#      include: 'deleteData/**'
#
#    url:
#      cors:
#        allowedOrigins:
#          - '*'
#        allowedHeaders:
#          - Authorization
#        allowedMethods:
#          - DELETE
#
#  new_folder:
#    handler: newFolder.new_folder.new_folder
#
#    package:
#      include: 'newFolder/**'
#
#    url:
#      cors:
#        allowedOrigins:
#          - '*'
#        allowedHeaders:
#          - Authorization
#        allowedMethods:
#          - POST
#
#  delete_a_folder:
#    handler: deleteFolder.delete_folder.delete_a_folder
#
#    package:
#      include: 'deleteFolder/**'
#
#    url:
#      cors:
#        allowedOrigins:
#          - '*'
#        allowedHeaders:
#          - Authorization
#        allowedMethods:
#          - DELETE
#
#  download_file:
#    handler: downloadFile.download_file.download_file
#
#    package:
#      include: 'downloadFile/**'
#
#    url:
#      cors:
#        allowedOrigins:
#          - '*'
#        allowedHeaders:
#          - Authorization
#        allowedMethods:
#          - GET
#
#  rename:
#    handler: rename.rename.rename
#
#    package:
#      include: 'rename/**'
#
#    url:
#      cors:
#        allowedOrigins:
#          - '*'
#        allowedHeaders:
#          - Authorization
#        allowedMethods:
#          - PUT
#
#  update_metadata:
#    handler: updateMetadata.update_metadata.update_metadata
#
#    package:
#      include: 'updateMetadata/**'
#
#    url:
#      cors:
#        allowedOrigins:
#          - '*'
#        allowedHeaders:
#          - Authorization
#        allowedMethods:
#          - PUT
#
#  share_content:
#    handler: shareContent.share_content.share_content
#
#    package:
#      include: 'shareContent/**'
#
#    url:
#      cors:
#        allowedOrigins:
#          - '*'
#        allowedHeaders:
#          - Authorization
#        allowedMethods:
#          - PUT
#
#  share_album:
#    handler: shareAlbum.share_album.share_album
#
#    package:
#      include: 'shareAlbum/**'
#
#    url:
#      cors:
#        allowedOrigins:
#          - '*'
#        allowedHeaders:
#          - Authorization
#        allowedMethods:
#          - PUT
#
#  revoke_content_permission:
#    handler: revokeContentPermission.revoke_content_permission.revoke_content_permission
#
#    package:
#      include: 'revokeContentPermission/**'
#
#    url:
#      cors:
#        allowedOrigins:
#          - '*'
#        allowedHeaders:
#          - Authorization
#        allowedMethods:
#          - PUT
#
#  revoke_album_permission:
#    handler: revokeAlbumPermission.revoke_album_permission.revoke_album_permission
#
#    package:
#      include: 'revokeAlbumPermission/**'
#
#    url:
#      cors:
#        allowedOrigins:
#          - '*'
#        allowedHeaders:
#          - Authorization
#        allowedMethods:
#          - PUT

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: user-pool
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 6
    UserClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: user-client
        GenerateSecret: false
        UserPoolId:
          Ref: UserPool
        AccessTokenValidity: 5
        IdTokenValidity: 5
        ExplicitAuthFlows:
          - ALLOW_CUSTOM_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_USER_SRP_AUTH
